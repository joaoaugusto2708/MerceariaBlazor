@using Mercearia.UI.Client.Models
@using Mercearia.UI.Client.Helpers
@using System.Net.Http
@using System.Text.Json
@inject Api api
<Button Color="Color.Primary" Clicked="@ShowModal"><Blazorise.Icon Name="FontAwesomeIcons.PlusSquare" /></Button>

<Modal @ref="modalRef">
    <ModalContent Centered>
        <ModalHeader>
            <ModalTitle>Formulario </ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            <Validations Mode="ValidationMode.Auto" Model="@produto">
                <Validation>
                    <Field>
                        <FieldLabel>Nome do Produto</FieldLabel>
                        <FieldBody>
                            <TextEdit @bind-Text="produto.Nome">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </FieldBody>
                        
                    </Field>
                </Validation>
                <Validation>
                    <Field>
                        <FieldLabel>Descrição do Produto</FieldLabel>
                        <FieldBody>
                            <TextEdit @bind-Text="produto.Descricao">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </FieldBody>
                    </Field>
                </Validation>
                <Validation>
                    <Field>
                        <FieldLabel>Tipo do Produto</FieldLabel>
                        <FieldBody>
                            <TextEdit @bind-Text="produto.TipoProduto">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </FieldBody>
                        
                    </Field>
                </Validation>
            </Validations>
                    <Field>
                        <FieldLabel>Preço</FieldLabel>
                        <InputNumber TValue="decimal" @bind-Value="produto.Preco" Step="0.01" />
                    </Field>
                    <Field>
                        <FieldLabel>Quantidade</FieldLabel>
                        <InputNumber TValue="int" @bind-Value="produto.Quantidade" />
                    </Field>
                    <Field>
                        <FieldLabel>Disponível</FieldLabel>
                        <div>
                            <InputRadioGroup TValue="bool" @bind-Value="produto.Disponivel">
                                <InputRadio TValue="bool" Value="true" /> Sim
                                <InputRadio TValue="bool" Value="false" /> Não
                            </InputRadioGroup>
                        </div>
                    </Field>
                    <Field>
                        <FieldLabel>Validade</FieldLabel>
                        <InputDate TValue="DateTime" @bind-Value="produto.Validade" />
                    </Field>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="@HideModal">Close</Button>
            <Button Color="Color.Primary" Clicked="@SubmitForm">Save Changes</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

@code {
    private Modal modalRef;
    private Produto produto = new Produto();

    private Task ShowModal()
    {
        produto = new Produto
            {
                Validade = DateTime.Now
            };
        return modalRef.Show();
    }

    private Task HideModal()
    {
        return modalRef.Hide();
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            var result = await api.PostAsync("/api/Produto", produto);
            if (result != null)
            {
                Console.WriteLine("Produto adicionado com sucesso!");
            }
            await HideModal();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro ao adicionar o produto: {ex.Message}");
        }
    }

    private async Task SubmitForm()
    {
        await HandleValidSubmit();
    }
}
